{"version":3,"sources":["function/pickRandomNumber.tsx","function/formatNumber.tsx","function/pickRandomElement.tsx","function/makeTrailQuestion.tsx","function/pickRandomElements.tsx","function/distributeValue.tsx","model/Stop.tsx","model/trailWrappers.tsx","comp/AppComp.tsx","serviceWorker.ts","index.tsx"],"names":["pickRandomNumber","startOrEnd","end","Error","diff","Math","floor","random","numbro","registerLanguage","huHu","setLanguage","pickRandomElement","elements","length","index","slice","makeTrailQuestion","trail","stops","count","elementsPicked","remainingElements","i","element","push","pickRandomElements","answerStop","questionStops","answerStep","max","multiplier","reduce","smallest","stop","min","Infinity","answerMax","largest","answerBeforeTrick","answer","round","questionValues","n","mayOverlap","stopsDescending","sort","a","b","remainingValue","result","Map","entries","set","value","distributeValue","questionParts","Array","from","filter","answerLabel","name","m","rounded","makeStop","o","trailWrappers","trailIndexKey","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","useState","parseInt","localStorage","getItem","$trailIndex","set$trailIndex","$index","set$index","$value","set$value","$question","set$question","radioChanged","useCallback","e","trailIndex","target","setItem","onSubmit","preventDefault","alert","map","trailWrapper","key","type","checked","onChange","format","thousandSeparated","style","textAlign","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22058266.chunk.js","sourcesContent":["export function pickRandomNumber(startOrEnd: number, end?: number) {\n\tif (end == null) {\n\t\tend = startOrEnd\n\t\tstartOrEnd = 0\n\t}\n\tif (startOrEnd > end)\n\t\tthrow new Error(`[py87ji] Invalid range: ${startOrEnd} â€“ ${end}`)\n\tconst diff = end - startOrEnd\n\treturn startOrEnd + Math.floor(diff * Math.random())\n}\n","import numbro from 'numbro'\nimport huHu from 'numbro/dist/languages/hu-HU.min.js'\n\nnumbro.registerLanguage(huHu)\nnumbro.setLanguage('hu-HU')\n\nexport function formatNumber(n: number): string {\n\treturn numbro(n).format({\n\t\tthousandSeparated: true,\n\t})\n}\n","import { pickRandomNumber } from './pickRandomNumber'\nexport function pickRandomElement<T>(elements: readonly T[]): [T, T[]] {\n\tif (elements.length === 0) {\n\t\tthrow new Error(`[py874r] No items.`)\n\t} else if (elements.length === 1) {\n\t\treturn [elements[0], []]\n\t} else {\n\t\tconst index = pickRandomNumber(elements.length)\n\t\treturn [\n\t\t\telements[index],\n\t\t\t[...elements.slice(0, index), ...elements.slice(index + 1)],\n\t\t]\n\t}\n}\n","import { makeQuestion, Question } from '../model/Question'\nimport { Trail } from '../model/Trail'\nimport { distributeValue } from './distributeValue'\nimport { pickRandomElement } from './pickRandomElement'\nimport { pickRandomElements } from './pickRandomElements'\nimport { pickRandomNumber } from './pickRandomNumber'\n\nexport function makeTrailQuestion(trail: Trail): Question {\n\tconst count = 2\n\tconst stops = pickRandomElements(count, trail)\n\tconst [answerStop, questionStops] = pickRandomElement(stops)\n\tconst answerStep = Math.max(\n\t\tanswerStop.multiplier,\n\t\tquestionStops.reduce(\n\t\t\t(smallest, stop) => Math.min(smallest, stop.multiplier),\n\t\t\tInfinity,\n\t\t),\n\t)\n\tconst answerMax =\n\t\tMath.max(\n\t\t\tanswerStop.multiplier,\n\t\t\tquestionStops.reduce(\n\t\t\t\t(largest, stop) => Math.max(largest, stop.multiplier),\n\t\t\t\t1,\n\t\t\t),\n\t\t) * 1000\n\tconst answerBeforeTrick =\n\t\t(Math.floor(pickRandomNumber(answerStep, answerMax) / answerStep) *\n\t\t\tanswerStep) /\n\t\tanswerStop.multiplier\n\tconst answer =\n\t\tMath.random() < 0.3\n\t\t\t? round(answerBeforeTrick, 100)\n\t\t\t: Math.random() < 0.5\n\t\t\t? round(answerBeforeTrick, 10)\n\t\t\t: answerBeforeTrick\n\tconst questionValues = distributeValue(\n\t\tanswer * answerStop.multiplier,\n\t\tquestionStops,\n\t\tfalse,\n\t)\n\tconst questionParts = Array.from(questionValues.entries()).filter(\n\t\t([, value]) => value > 0,\n\t)\n\treturn makeQuestion({\n\t\tanswer,\n\t\tanswerLabel: answerStop.name,\n\t\tquestionParts,\n\t})\n}\n\nfunction round(n: number, m: number): number {\n\tconst rounded = Math.round(n / m) * m\n\treturn rounded === 0 ? n : rounded\n}\n","import { pickRandomElement } from './pickRandomElement'\n\nexport function pickRandomElements<T>(\n\tcount: number,\n\telements: readonly T[],\n): T[] {\n\tif (elements.length < count)\n\t\tthrow new Error(`[py87ao] Not enough elements.`)\n\tlet elementsPicked: T[] = []\n\tlet remainingElements = elements\n\tfor (let i = 0; i < count; i++) {\n\t\tconst [element, rest] = pickRandomElement(remainingElements)\n\t\tremainingElements = rest\n\t\telementsPicked.push(element)\n\t}\n\treturn elementsPicked\n}\n","import { Stop } from '../model/Stop'\nimport { pickRandomNumber } from './pickRandomNumber'\n\nexport function distributeValue(\n\tn: number,\n\tstops: readonly Stop[],\n\tmayOverlap: boolean,\n) {\n\tconst stopsDescending = stops\n\t\t.slice()\n\t\t.sort((a, b) => b.multiplier - a.multiplier)\n\tlet remainingValue = n\n\tlet result = new Map<Stop, number>()\n\tfor (const [index, stop] of stopsDescending.entries()) {\n\t\tconst isLast = index === stopsDescending.length - 1\n\t\tif (isLast) {\n\t\t\tresult.set(stop, remainingValue / stop.multiplier)\n\t\t} else {\n\t\t\tconst value = Math.floor(\n\t\t\t\t(mayOverlap\n\t\t\t\t\t? pickRandomNumber(remainingValue)\n\t\t\t\t\t: remainingValue) / stop.multiplier,\n\t\t\t)\n\t\t\tremainingValue -= value * stop.multiplier\n\t\t\tresult.set(stop, value)\n\t\t}\n\t}\n\treturn result\n}\n","export interface Stop {\n\tname: string\n\tmultiplier: number\n}\n\nexport function makeStop(o: Stop) {\n\treturn o\n}\n","import { makeStop } from './Stop'\nimport { TrailWrapper } from './TrailWrapper'\n\nexport const trailWrappers: TrailWrapper[] = [\n\t{\n\t\tname: 'SÃºly (g)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'g',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dkg',\n\t\t\t\tmultiplier: 10,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'kg',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'q',\n\t\t\t\tmultiplier: 1000 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 't',\n\t\t\t\tmultiplier: 1000 * 1000,\n\t\t\t}),\n\t\t],\n\t},\n\t{\n\t\tname: 'TÃ¡volsÃ¡g (m)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'mm',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cm',\n\t\t\t\tmultiplier: 10,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dm',\n\t\t\t\tmultiplier: 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'm',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'km',\n\t\t\t\tmultiplier: 1000 * 1000,\n\t\t\t}),\n\t\t],\n\t},\n\t{\n\t\tname: 'TerÃ¼let (mÂ²)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'mmÂ²',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cmÂ²',\n\t\t\t\tmultiplier: 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dmÂ²',\n\t\t\t\tmultiplier: 100 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'mÂ²',\n\t\t\t\tmultiplier: 100 * 100 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'a',\n\t\t\t\tmultiplier: 100 * 100 * 100 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'ha',\n\t\t\t\tmultiplier: 100 * 100 * 100 * 100 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'kmÂ²',\n\t\t\t\tmultiplier: 100 * 100 * 100 * 100 * 100 * 100,\n\t\t\t}),\n\t\t],\n\t},\n\t{\n\t\tname: 'TÃ©rfogat (mÂ³)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'mmÂ³',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cmÂ³',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dmÂ³',\n\t\t\t\tmultiplier: 1000 * 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'mÂ³',\n\t\t\t\tmultiplier: 1000 * 1000 * 1000,\n\t\t\t}),\n\t\t],\n\t},\n\t{\n\t\tname: 'TÃ©rfogat (l)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'ml',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cl',\n\t\t\t\tmultiplier: 10,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dl',\n\t\t\t\tmultiplier: 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'l',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'hl',\n\t\t\t\tmultiplier: 1000 * 100,\n\t\t\t}),\n\t\t],\n\t},\n\t{\n\t\tname: 'TÃ©rfogat (mÂ³ + l)',\n\t\ttrail: [\n\t\t\tmakeStop({\n\t\t\t\tname: 'mmÂ³',\n\t\t\t\tmultiplier: 1,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cmÂ³',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'ml',\n\t\t\t\tmultiplier: 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'cl',\n\t\t\t\tmultiplier: 1000 * 10,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dl',\n\t\t\t\tmultiplier: 1000 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'dmÂ³',\n\t\t\t\tmultiplier: 1000 * 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'l',\n\t\t\t\tmultiplier: 1000 * 1000,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'hl',\n\t\t\t\tmultiplier: 1000 * 1000 * 100,\n\t\t\t}),\n\t\t\tmakeStop({\n\t\t\t\tname: 'mÂ³',\n\t\t\t\tmultiplier: 1000 * 1000 * 1000,\n\t\t\t}),\n\t\t],\n\t},\n]\n","import React, { useCallback, useState } from 'react';\nimport { formatNumber } from '../function/formatNumber';\nimport { makeTrailQuestion } from '../function/makeTrailQuestion';\nimport { trailWrappers } from '../model/trailWrappers';\n\nconst trailIndexKey = 'trailIndex'\n\nexport function AppComp() {\n\tconst [$trailIndex, set$trailIndex] = useState(() =>\n\t\tMath.max(\n\t\t\ttrailWrappers.length - 1,\n\t\t\tparseInt(localStorage.getItem(trailIndexKey) || '0', 10),\n\t\t),\n\t)\n\tconst [$index, set$index] = useState(0)\n\tconst [$value, set$value] = useState('')\n\tconst [$question, set$question] = useState(() =>\n\t\tmakeTrailQuestion(trailWrappers[$trailIndex].trail),\n\t)\n\tconst radioChanged = useCallback<\n\t\tReact.ChangeEventHandler<HTMLInputElement>\n\t>(e => {\n\t\tconst trailIndex = parseInt(e.target.value, 10)\n\t\tset$trailIndex(trailIndex)\n\t\tset$index(0)\n\t\tset$value('')\n\t\tset$question(makeTrailQuestion(trailWrappers[trailIndex].trail))\n\t\tlocalStorage.setItem(trailIndexKey, trailIndex + '')\n\t}, [])\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tconst value = parseInt($value, 10)\n\t\t\t\tif (value === $question.answer) {\n\t\t\t\t\talert(`Helyes!`)\n\t\t\t\t\tset$value('')\n\t\t\t\t\tset$index($index + 1)\n\t\t\t\t\tset$question(\n\t\t\t\t\t\tmakeTrailQuestion(trailWrappers[$trailIndex].trail),\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\talert(`Helytelen.`)\n\t\t\t\t\tset$value('')\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<p>\n\t\t\t\t{trailWrappers.map((trailWrapper, index) => (\n\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tname='trail'\n\t\t\t\t\t\t\tvalue={index + ''}\n\t\t\t\t\t\t\tchecked={$trailIndex === index}\n\t\t\t\t\t\t\tonChange={radioChanged}\n\t\t\t\t\t\t/>{'\\u00a0'}\n\t\t\t\t\t\t{trailWrapper.name}{' '}\n\t\t\t\t\t</label>\n\t\t\t\t))}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<small>{$index + 1}.</small>\n\t\t\t</p>\n\t\t\t{$question.questionParts.map(([stop, value], index) => (\n\t\t\t\t<p key={index}>\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{formatNumber(value)} {stop.name}\n\t\t\t\t\t</strong>\n\t\t\t\t</p>\n\t\t\t))}\n\t\t\t<p>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tstyle={{ textAlign: 'right' }}\n\t\t\t\t\tvalue={$value}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tset$value(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>{' '}\n\t\t\t\t{$question.answerLabel} <button>OK</button>\n\t\t\t</p>\n\t\t</form>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppComp } from './comp/AppComp'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nReactDOM.render(<AppComp />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}